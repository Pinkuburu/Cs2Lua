require "cs2lua__namespaces"; 

Mandelbrot = {
	__new_object = function(...)
		return newobject(Mandelbrot, nil, nil, "ctor", nil, ...);
	end,
	__define_class = function()
		Utility.Warn("Mandelbrot::__define_class begin");
		local static = Mandelbrot;
		local static_methods = {
			cctor = function()
				Mandelbrot.__cctor();
			end,
			__cctor = function()
				if Mandelbrot.__cctor_called then 
					return;
				else
					Mandelbrot.__cctor_called = true;
				end;
			end,
		};

		local static_fields_build = function()
			local static_fields = {
				__cctor_called = false,
			};
			return static_fields;
		end;

		local instance_methods = {
			Init = function(this, obj, mb)
				this.root = newexternobject(UnityEngine.GameObject, nil, nil, nil, "UnityEngine.GameObject:ctor__String", "mandelbrot");
				this:Exec();
			end,
			Call = function(this, name, ...)
				local args = wrapparams({...}, System.Object, TypeKind.Class);
			end,
			Exec = function(this)
				local width;
				width = 50;
				local height;
				height = width;
				local maxiter;
				maxiter = 50;
				local limit;
				limit = 4.00;
				local y;
				y = 0;
				while (y < height) do
					local Ci;
					Ci = (((2.00 * y) / height) - 1.00);
					local x;
					x = 0;
					while (x < width) do
						local Zr;
						Zr = 0.00;
						local Zi;
						Zi = 0.00;
						local Cr;
						Cr = (((2.00 * x) / width) - 1.50);
						local i;
						i = maxiter;
						local isInside;
						isInside = true;
						repeat

							local Tr;
							Tr = (((Zr * Zr) - (Zi * Zi)) + Cr);
							Zi = (((2.00 * Zr) * Zi) + Ci);
							Zr = Tr;
							if (((Zr * Zr) + (Zi * Zi)) > limit) then 
								isInside = false;
								break;
							end;
						until not ((function()
							i = (i - 1);
							return i;
						end)() > 0) ;
						if isInside then 
							this:DrawCube(x, y, width, height);
						end;
						x = (x + 1);
					end;
					y = (y + 1);
				end;
			end,
			DrawCube = function(this, x, y, w, h)
				local cube;
				cube = UnityEngine.GameObject.CreatePrimitive(3);
				cube.transform.position = newexternobject(UnityEngine.Vector3, nil, nil, nil, "UnityEngine.Vector3:ctor__Single__Single__Single", (((x * this.r) * this.scale) / w), ((((y * this.r) * this.scale) / h) - 12), 0);
				cube.transform:SetParent("UnityEngine.Transform:SetParent__Transform", this.root.transform);
				local mat;
				mat = cube:GetComponent("UnityEngine.GameObject:GetComponent__Type", UnityEngine.Renderer).material;
				local ix;
				ix = UnityEngine.Random.Range("UnityEngine.Random:Range__Int32__Int32", 0, this.colors.Length);
				mat.color = this.colors[(ix + 1)];
			end,
			ctor = function(this)
				this:__ctor();
			end,
			__ctor = function(this)
				if this.__ctor_called then 
					return;
				else
					this.__ctor_called = true;
				end;
				this.colors = wraparray({UnityEngine.Color.red, UnityEngine.Color.blue, UnityEngine.Color.green, UnityEngine.Color.cyan, UnityEngine.Color.grey, UnityEngine.Color.white, UnityEngine.Color.yellow, UnityEngine.Color.magenta, UnityEngine.Color.black}, nil, UnityEngine.Color, TypeKind.Struct);
			end,
		};
		local instance_fields_build = function()
			local instance_fields = {
				root = __cs2lua_nil_field_value,
				colors = __cs2lua_nil_field_value,
				r = 10,
				scale = 3.00,
				__ctor_called = false,
			};
			return instance_fields;
		end;

		local interfaces = {
			"IStartupPlugin",
		};

		local class_info = nil;
		local method_info = {
			ctor = {
				Kind = MethodKind.Constructor,
			},
		};
		local property_info = nil;
		local event_info = nil;
		local field_info = nil;

		local __defineclass_return = defineclass(nil, "Mandelbrot", "Mandelbrot", static, static_methods, static_fields_build, instance_methods, instance_fields_build, interfaces, class_info, method_info, property_info, event_info, field_info, false);
		Utility.Warn("Mandelbrot::__define_class end");
		return __defineclass_return;
	end,
};


require "cs2lua__lualib";
require "cs2lua__externenums";
require "cs2lua__interfaces";
settempmetatable(Mandelbrot);
