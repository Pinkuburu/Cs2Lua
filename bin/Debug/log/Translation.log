============<<<Translation Error:test>>>============
<<<[Log for InvocationExpressionSyntax]>>> Can't determine symbol: OverloadResolutionFailure, code:[ System.Array.IndexOf(a, 3) ] location: test.cs: (86,17)-(86,43)
	CandidateSymbol: System.Array.IndexOf(System.Array, object)
	CandidateSymbol: System.Array.IndexOf(System.Array, object, int)
	CandidateSymbol: System.Array.IndexOf(System.Array, object, int, int)
	CandidateSymbol: System.Array.IndexOf<int>(int[], int)
	CandidateSymbol: System.Array.IndexOf<T>(T[], T, int)
	CandidateSymbol: System.Array.IndexOf<T>(T[], T, int, int)
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v1 in v1s let v3 = v1.Value let v4 = v3.ToString().Split(' ') from vvvv in (from v2 in v2s select v2) where !string.IsNullOrEmpty(v1.ToString()) select v1.ToString() ] location: test.cs: (99,17)-(99,187)] Cs2Dsl can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use script LINQ class in lualib.dsl)
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v2 in v2s select v2 ] location: test.cs: (99,98)-(99,122)] Cs2Dsl can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use script LINQ class in lualib.dsl)
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v1 in v1s join v2 in v2s on v1.Key equals v2.Key into ttt0 select new { v1 = v1, v2 = ttt0.Count() } into ttt group ttt by ttt.v2 ] location: test.cs: (100,17)-(100,151)] Cs2Dsl can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use script LINQ class in lualib.dsl)
