require "cs2lua__namespaces"; 

bar = {
	__new_object = function(...)
		return newobject(bar, nil, nil, "ctor", nil, ...);
	end,
	cctor = function()
		bar.__cctor();
	end,
	__cctor = function()
		if bar.__cctor_called then 
			return;
		else
			bar.__cctor_called = true;
		end;
		bar.s_DateTime = newexternobject(System.DateTime, nil, nil, nil);
	end,
	__define_class = function()
		Utility.Warn("bar::__define_class begin");

		local class = bar;
		local static_fields_build = function()
			local static_fields = {
				s_DateTime = __cs2lua_nil_field_value,
				__cctor_called = false,
			};
			return static_fields;
		end;

		local instance_methods = {
			test = function(this)
				local a;
				a = newobject(foo_System_Int32_System_Int32, {System.Int32, System.Int32}, {TypeKind.Struct, TypeKind.Struct}, "ctor", nil);
				a:parse("123", "456");
				local b;
				b = this.m_DateTime:ToString("System.DateTime:ToString");
				local c;
				c = bar.s_DateTime:ToString("System.DateTime:ToString");
				local dt;
				local dt2;
			end,
			ctor = function(this)
				this:__ctor();
			end,
			__ctor = function(this)
				if this.__ctor_called then 
					return;
				else
					this.__ctor_called = true;
				end;
				this.m_DateTime = newexternobject(System.DateTime, nil, nil, nil);
			end,
		};
		local instance_fields_build = function()
			local instance_fields = {
				m_DateTime = __cs2lua_nil_field_value,
				__ctor_called = false,
			};
			return instance_fields;
		end;

		local __defineclass_return = defineclass(nil, "bar", "bar", class, static_fields_build, instance_methods, instance_fields_build, false);
		Utility.Warn("bar::__define_class end");
		return __defineclass_return;
	end,

	__interfaces = nil,
	__class_info = nil,
	__method_info = {
		test = {
			Kind = MethodKind.Ordinary,
		},
		ctor = {
			Kind = MethodKind.Constructor,
		},
	},
	__property_info = nil,
	__event_info = nil,
	__field_info = nil,
};


require "cs2lua__lualib";
require "cs2lua__externenums";
require "cs2lua__interfaces";
require "foo_system_int32_system_int32";
settempmetatable(bar);
