require "cs2lua__namespaces"; 

TopLevel.Runnable = {
	__new_object = function(...)
		return newobject(TopLevel.Runnable, nil, nil, "ctor", nil, ...);
	end,
	cctor = function()
		TopLevel.Runnable.__cctor();
	end,
	__cctor = function()
		if TopLevel.Runnable.__cctor_called then 
			return;
		else
			TopLevel.Runnable.__cctor_called = true;
		end;
	end,
	__define_class = function()
		Utility.Warn("TopLevel.Runnable::__define_class begin");

		local class = TopLevel.Runnable;
		local static_fields_build = function()
			local static_fields = {
				__cctor_called = false,
			};
			return static_fields;
		end;

		local instance_methods = {
			TopLevel_IRunnable0_Test = function(this)
				LuaConsole.Print("test.");
			end,
			> = function(this)
				return 1;
			end,
			> = function(this, value)
			end,
			get_Item = function(this, ix)
				return 1;
			end,
			set_Item = function(this, ix, value)
			end,
			Test2 = function(this)
				local s;
				s = invokeforbasicvalue(4, true, TopLevel.TestEnum, "ToString", "System.Enum:ToString");
				local e;
				e = 1;
				System.Enum.Parse("System.Enum:Parse__Type__String", TopLevel.TestEnum, "Two");
				local ss;
				ss = invokeforbasicvalue(1, true, System.PlatformID, "ToString", "System.Enum:ToString");
			end,
			> = function(this, value)
			end,
			> = function(this, value)
			end,
			ctor = function(this)
				this:__ctor();
			end,
			__ctor = function(this)
				if this.__ctor_called then 
					return;
				else
					this.__ctor_called = true;
				end;
			end,
		};
		local instance_fields_build = function()
			local instance_fields = {
				__ctor_called = false,
			};
			return instance_fields;
		end;

		local __defineclass_return = defineclass(nil, "TopLevel.Runnable", "Runnable", class, static_fields_build, instance_methods, instance_fields_build, false);
		Utility.Warn("TopLevel.Runnable::__define_class end");
		return __defineclass_return;
	end,

	__interfaces = {
		"TopLevel.IRunnable_System_Int32",
		"TopLevel.IRunnable0",
	},
	__class_info = nil,
	__method_info = {
		> = {
			Kind = <,
			< = TopLevel_IRunnable,
			_get_TestProp = ,
		},
		> = {
			Kind = <,
			< = TopLevel_IRunnable,
			_set_TestProp = ,
		},
		get_Item = {
			Kind = MethodKind.PropertyGet,
		},
		set_Item = {
			Kind = MethodKind.PropertySet,
		},
		Test2 = {
			Kind = MethodKind.Ordinary,
		},
		> = {
			Kind = <,
			< = TopLevel_IRunnable,
			_add_OnAction = ,
		},
		> = {
			Kind = <,
			< = TopLevel_IRunnable,
			_remove_OnAction = ,
		},
		ctor = {
			Kind = MethodKind.Constructor,
		},
	},
	__property_info = nil,
	__event_info = nil,
	__field_info = nil,
};


require "cs2lua__lualib";
require "cs2lua__externenums";
require "cs2lua__interfaces";
require "toplevel__testenum";
settempmetatable(TopLevel.Runnable);
