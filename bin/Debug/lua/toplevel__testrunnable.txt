require "cs2lua__namespaces"; 

TopLevel.TestRunnable = {
	__new_object = function(...)
		return newobject(TopLevel.TestRunnable, nil, nil, "ctor", nil, ...);
	end,
	cctor = function()
		TopLevel.TestRunnable.__cctor();
	end,
	__cctor = function()
		if TopLevel.TestRunnable.__cctor_called then 
			return;
		else
			TopLevel.TestRunnable.__cctor_called = true;
		end;
	end,
	__define_class = function()
		Utility.Warn("TopLevel.TestRunnable::__define_class begin");

		local class = TopLevel.TestRunnable;
		local static_fields_build = function()
			local static_fields = {
				__cctor_called = false,
			};
			return static_fields;
		end;

		local instance_methods = {
			Test = function(this)
				local f;
				f = newobject(TopLevel.Runnable, nil, nil, "ctor", nil);
				f:TopLevel_IRunnable0_Test();
				local i;
				i = f[4];
				f[0] = i;
				f:set_TopLevel_IRunnable<System_Int32>_TestProp(i);
				i = f:get_TopLevel_IRunnable<System_Int32>_TestProp();
				local pow;
				pow = (function(v)
						return invokeintegeroperator(4, "*", v, v, System.Int32, System.Int32);
					end);
				local pow2;
				pow2 = (function(v1, v2)
						return invokeintegeroperator(4, "*", v1, v2, System.Int32, System.Int32);
					end);
				local a;
				a = (function()
						i = invokeintegeroperator(4, "*", i, i, System.Int32, System.Int32);
						LuaConsole.Print(invokeintegeroperator(4, "*", i, 4, System.Int32, System.Int32));
					end);
				f.OnAction = delegationadd(false, "TopLevel.IRunnable_System_Int32:OnAction", f, "OnAction", SymbolKind.Event, a);
				f.OnAction = delegationremove(false, "TopLevel.IRunnable_System_Int32:OnAction", f, "OnAction", SymbolKind.Event, a);
				this.OnDelegation = delegationadd(false, "TopLevel.TestRunnable:OnDelegation", this, "OnDelegation", SymbolKind.Field, a);
				local t;
				t = wrapconst(System.Single, "NegativeInfinity");
				t = wrapconst(System.Single, "NaN");
			end,
			ctor = function(this)
				this:__ctor();
			end,
			__ctor = function(this)
				if this.__ctor_called then 
					return;
				else
					this.__ctor_called = true;
				end;
			end,
		};
		local instance_fields_build = function()
			local instance_fields = {
				OnDelegation = __cs2lua_nil_field_value,
				__ctor_called = false,
			};
			return instance_fields;
		end;

		local __defineclass_return = defineclass(nil, "TopLevel.TestRunnable", "TestRunnable", class, static_fields_build, instance_methods, instance_fields_build, false);
		Utility.Warn("TopLevel.TestRunnable::__define_class end");
		return __defineclass_return;
	end,

	__interfaces = nil,
	__class_info = nil,
	__method_info = {
		Test = {
			Kind = MethodKind.Ordinary,
		},
		ctor = {
			Kind = MethodKind.Constructor,
		},
	},
	__property_info = nil,
	__event_info = nil,
	__field_info = nil,
};


require "cs2lua__lualib";
require "cs2lua__externenums";
require "cs2lua__interfaces";
require "toplevel__runnable";
settempmetatable(TopLevel.TestRunnable);
