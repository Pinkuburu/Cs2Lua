require "cs2lua__namespaces"; 

CUsingHelper = {
	__new_object = function(...)
		return newobject(CUsingHelper, nil, nil, "ctor", nil, ...);
	end,
	Test = function(i)
		return nil;
	end,
	ReadZip = function(bytes)
		local __method_ret_40_4_55_2;
		__method_ret_40_4_55_2 = nil;
		local zipInput;
		zipInput = newobject(ZipInputStream, nil, nil, "ctor", nil, newexternobject(System.IO.MemoryStream, nil, nil, nil, "System.IO.MemoryStream:ctor__Arr_Byte", bytes));
		local zipMemory;
		zipMemory = newexternobject(System.IO.MemoryStream, nil, nil, nil, "System.IO.MemoryStream:ctor");
		local ZipStream;
		ZipStream = newobject(ZipOutputStream, nil, nil, "ctor", nil, zipMemory);
		local __try_ret_46_2_54_3, __try_retval_46_2_54_3;
		__try_ret_46_2_54_3,__try_retval_46_2_54_3 = luatry(CUsingHelper.Test, 123);
		if __try_ret_46_2_54_3 then
			__method_ret_40_4_55_2 = __try_retval_46_2_54_3;
			__try_retval_46_2_54_3 = 1;
		end;
		if __try_ret_46_2_54_3 then 
			if __try_retval_46_2_54_3 then 
				if (__try_retval_46_2_54_3 == 1) then 
					return __method_ret_40_4_55_2;
				end;
			end;
		end;
		local __try_handled_46_2_54_3, __try_catch_ret_val_46_2_54_3;
		__try_handled_46_2_54_3 = false;
		__try_catch_ret_val_46_2_54_3 = luacatch(__try_handled_46_2_54_3, __try_retval_46_2_54_3, (not __try_ret_46_2_54_3) and (function()
				__try_handled_46_2_54_3 = true;
				do
					__method_ret_40_4_55_2 = nil;
					return 1;
				end;
				luathrow();
			end));
		if __try_catch_ret_val_46_2_54_3 then 
			if (__try_catch_ret_val_46_2_54_3 == 1) then 
				return __method_ret_40_4_55_2;
			end;
		end;
		return __method_ret_40_4_55_2;
	end,
	cctor = function()
		CUsingHelper.__cctor();
	end,
	__cctor = function()
		if CUsingHelper.__cctor_called then 
			return;
		else
			CUsingHelper.__cctor_called = true;
		end;
	end,
	__define_class = function()
		Utility.Warn("CUsingHelper::__define_class begin");

		local class = CUsingHelper;
		local static_fields_build = function()
			local static_fields = {
				__attributes = CUsingHelper__Attrs,
				__cctor_called = false,
			};
			return static_fields;
		end;

		local instance_methods = {
			ctor = function(this, a1, a2)
				this:__ctor();
				return this;
			end,
			Dispose = function(this)
			end,
			__ctor = function(this)
				if this.__ctor_called then 
					return;
				else
					this.__ctor_called = true;
				end;
			end,
		};
		local instance_fields_build = function()
			local instance_fields = {
				__attributes = CUsingHelper__Attrs,
				__ctor_called = false,
			};
			return instance_fields;
		end;

		local __defineclass_return = defineclass(nil, "CUsingHelper", "CUsingHelper", class, static_fields_build, instance_methods, instance_fields_build, false);
		Utility.Warn("CUsingHelper::__define_class end");
		return __defineclass_return;
	end,

	__interfaces = {
		"System.IDisposable",
	},
	__class_info = nil,
	__method_info = {
		ctor = {
			Kind = MethodKind.Constructor,
		},
		Dispose = {
			Kind = MethodKind.Ordinary,
		},
		Test = {
			Kind = MethodKind.Ordinary,
			static = true,
		},
		ReadZip = {
			Kind = MethodKind.Ordinary,
			static = true,
		},
	},
	__property_info = nil,
	__event_info = nil,
	__field_info = nil,
};


require "cs2lua__lualib";
require "cs2lua__attributes";
require "cs2lua__externenums";
require "cs2lua__interfaces";
require "zipinputstream";
require "zipoutputstream";
settempmetatable(CUsingHelper);
